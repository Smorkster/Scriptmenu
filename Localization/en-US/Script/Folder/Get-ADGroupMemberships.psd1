ConvertFrom-StringData @'
CodeDescReplace = (\. This group should be populated with user accounts)|(\. This group should NOT be populated with user accounts)|(Gives Modify on )|(Enables ReadAndExecute )|( for external users)
CodeMatchAppGrp =     \\\\\\dfs\\\\app\\$\\\\
CodeMatchDescGGroup = \\\\\\dfs\\\\gem\\$\\\\
CodeMatchDescSGroup = \\\\\\dfs\\\\sgem\\$\\\\
CodeMatchFullPermGrp = \.*_F\$
CodeMatchReadPermGrp = \.*_R\$
CodeMatchSpecialArea = dom01\|dom02
CodeMatchWritePermGrp = \.*_C\$
ErrLogUserNotFound = does not exist in AD
LogGroupCount = groups
LogUserCount = user
QDisplayOptions = Should the information be displayed in this window (1), or should it be displayed in Notepad (2)?
QSearchGranularity = Should the eligibility search be thorough? Then takes longer (Y / N)
StrEnd = Now the whole script is finished and all users have their own list printed in the Output folder. You can use the Output tab in Scriptmenu to open the files.
StrFolderPermissionsG = Folder permissions to G
StrFolderPermissionsR = Folder permissions to R
StrFolderPermissionsS = Folder permissions to S
StrNotepad = Notepad opens, enter users
StrNotepadTitle = Enter user ID, one per line
StrOpeningFile = Opens the file for
StrOpTitle = Retrieves all groups for
StrOutTitle = is assigned as a member of the following authorization groups
StrPLvlChange = Writing permission
StrPLvlFull = Full permission
StrPLvlRead = Read permission
StrTitle = This script retrieves and sorts all permission groups for one or more users. All file permissions are then exported to one TXT file per user
StrTitleAppGroups = Application folders
StrTitleOtherFiles = Other file permissions
StrTitleOtherGroups = Other group permissions
StrTitleSubGroups = groups
StrUnknownIdsCount = user accounts not found
StrUnknownPerm = Unknown authorization
StrUserNotFound = Could not find user with id:
'@
